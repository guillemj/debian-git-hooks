#!/bin/sh

set -e

configfile=$1
projectname=$2
branch_to_build=$3

if [ -f "$configfile" ]; then
  # Load jenkins_host and jenkins_token variables.
  . "$configfile"
else
  exit 0
fi

trigger_jenkins()
{
  oldrev=$(git rev-parse $1)
  newrev=$(git rev-parse $2)
  refname="$3"

  if expr "$oldrev" : '0*$' >/dev/null; then
    change_type="create"
  elif expr "$newrev" : '0*$' >/dev/null; then
    change_type="delete"
  else
    change_type="update"
  fi

  case "$change_type" in
  create|update)
    rev="$newrev"
    branch_name=${refname##refs/heads/}
    ;;
  delete)
    # We are not interested in deletes.
    return
    ;;
  esac

  if [ "$branch_name" != "$branch_to_build" ]; then
    return
  fi

  # Request autobuild in jenkins instance.
  if wget --tries=2 --dns-timeout=5 --connect-timeout=5 --read-timeout=5 \
          -O /dev/null "http://$jenkins_host/job/${projectname}/buildWithParameters?token=$jenkins_token&branch=origin/${branch_name}" >/dev/null 2>&1; then
    echo "Triggered autobuild of $branch_name at http://$jenkins_host/job/${projectname}/lastBuild/"
  else
    echo "Could not trigger autobuild of $branch_name at http://$jenkins_host/job/${projectname}/buildWithParameters?token=********&branch=origin/${branch_name} (project not present/set up?)"
  fi
}

while read oldrev newrev refname; do
  trigger_jenkins $oldrev $newrev $refname
done
